@model Hack2019PO.Models.VotingRoomData
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta charset="utf-8" />
    <meta />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Nunito&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/styles/custom.css">
    <title>Volebné miestnosti</title>
    <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" />
    <script type="text/javascript" src='../test-credentials.js'></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-ui.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>
    <style>
        #map {
            width: 95%;
            height: 450px;
            background: grey;
        }

        #panel {
            width: 100%;
            height: 400px;
        }
        td{
            padding:5px;
        }
    </style>
</head>
<body>
    <ul>
        <img src="../../images/volb.png" alt="Alternate Text" style="height:49px; margin-left: 25px; margin-top:2px" />
        <li>@Html.ActionLink("Vyhľadaj poslanca PSK", "Search")</li>
        <li class="active">@Html.ActionLink("Vyhľadať volebnú miestnosť", "LookupVoting")</li>
        <li>@Html.ActionLink("Štatistiky poslancov", "Statistics")</li>
        <li>@Html.ActionLink("Domov", "Index")</li>
    </ul>

    <div class="page-header" style="margin-bottom:20px">
        <h2 style="text-align:center; padding-top:25px">Najbližšia volebná miestnosť je:</h2>
 
        <table style="margin:25px 0 25px 0;display:flex;justify-content: center">
            <tbody style="border: 1px double">
                <tr style="border-bottom: 1px solid black"">
                    <td style="font-weight:bold;border-right:1px solid black">Vaša adresa :</td>
                    <td>@Model.Street</td>
                </tr>
                <tr style="border-bottom: 1px solid black">
                    <td style="font-weight:bold;border-right:1px solid black">Adresa :</td>
                    <td>@Model.DistrictAddress</td>
                </tr>
                <tr style="border-bottom: 1px solid black">
                    <td style="font-weight:bold;border-right:1px solid black">Číslo okrsku :</td>
                    <td>@Model.DistrictNo</td>
                </tr>
                <tr style="border-bottom: 1px solid black">
                    <td style="font-weight:bold;border-right:1px solid black">Volebná miestnosť :</td>
                    <td>@Model.District</td>
                </tr>
                <tr style="padding-bottom:50px">
                    <td style="font-weight:bold;border-right:1px solid black">Zodpovedná osoba :</td>
                    <td>@Model.ContactPerson</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id="map" style="margin: 0 auto;"></div>

    <script>
        @{

            var address = $"{Model.DistrictAddress}, {Model.City}";
            var url = "https://geocoder.api.here.com/6.2/geocode.json?searchtext=" + address + "&app_id=QQ7qQvWNBIMf1tTonjwJ&app_code=HLkILqXj0dk3ERV_7NNDeg&gen=8";
            var json = new WebClient().DownloadString(url);
            var x = Newtonsoft.Json.Linq.JObject.Parse(json);
            var  success = x["success"];

            var latitud = x["Response"]["View"][0]["Result"][0]["Location"]["MapView"]["TopLeft"]["Latitude"];
            var longitud = x["Response"]["View"][0]["Result"][0]["Location"]["MapView"]["TopLeft"]["Longitude"];

            string address2 = Model.Street + "," + Model.StreetNo + ",Presov";
             var url2 = "https://geocoder.api.here.com/6.2/geocode.json?searchtext=" + address2 + "&app_id=QQ7qQvWNBIMf1tTonjwJ&app_code=HLkILqXj0dk3ERV_7NNDeg&gen=8";
             var json2 = new WebClient().DownloadString(url2);
             var x2 = Newtonsoft.Json.Linq.JObject.Parse(json2);
             var  success2 = x2["success"];

             var latitud2 = x2["Response"]["View"][0]["Result"][0]["Location"]["MapView"]["TopLeft"]["Latitude"];
             var longitud2 = x2["Response"]["View"][0]["Result"][0]["Location"]["MapView"]["TopLeft"]["Longitude"];
            string lat2 = latitud2.ToString();
            string lon2 = longitud2.ToString();

                    }

        function addMarkersToMap(map) {
            var latitu = @latitud, longitu =@longitud;
            var parisMarker = new H.map.Marker({ lat: latitu, lng: longitu });
            map.addObject(parisMarker);
        }

                    function moveMapToBerlin(map){
                        var latitud = @latitud, longitud =@longitud; 

                        document.getElementById("latInput").value = latitud;
                        document.getElementById("lonInput").value = longitud;





                        map.setCenter({ lat: latitud, lng: longitud });
                        map.setZoom(16);
                    }

                    /**
                     * Boilerplate map initialization code starts below:
                     */

                    //Step 1: initialize communication with the platform
                    // In your own code, replace variable window.apikey with your own apikey
                    var platform = new H.service.Platform({
        apikey: "1auuJz0Im2EVxgiNnjFylMRR2lVPXv-D0KHR8jCarcY"

      });
        var defaultLayers = platform.createDefaultLayers();
        

                //Step 2: initialize a map - this map is centered over Europe
                var map = new H.Map(document.getElementById('map'),
                  defaultLayers.vector.normal.map,{

                  center: {lat:50, lng:5},
        zoom: 4,
        pixelRatio: window.devicePixelRatio || 1
                });
        

      // add a resize listener to make sure that the map occupies the whole container
      window.addEventListener('resize', () => map.getViewPort().resize());

      //Step 3: make the map interactive
      // MapEvents enables the event system
      // Behavior implements default interactions for pan/zoom (also on mobile touch environments)
      var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

            // Create the default UI components
            var ui = H.ui.UI.createDefault(map, defaultLayers);

            // Now use the map as required...
            window.onload = function () {
                moveMapToBerlin(map);
                addMarkersToMap(map);
            }
                    // Create the parameters for the routing request:
            var routingParameters = {
              // The routing mode:
              'mode': 'fastest;car',
                // The start point of the route:

              'waypoint0': 'geo!'.concat(@latitud, ',', @longitud),
              // The end point of the route:
              'waypoint1': 'geo!'.concat(@latitud2,',',@longitud2),
              // To retrieve the shape of the route we choose the route
              // representation mode 'display'
              'representation': 'display'
            };

            // Define a callback function to process the routing response:
            var onResult = function(result) {
              var route,
              routeShape,
              startPoint,
              endPoint,
              linestring;
              if(result.response.route) {
              // Pick the first route from the response:
              route = result.response.route[0];
              // Pick the route's shape:
              routeShape = route.shape;

              // Create a linestring to use as a point source for the route line
              linestring = new H.geo.LineString();

              // Push all the points in the shape into the linestring:
              routeShape.forEach(function(point) {
              var parts = point.split(',');
              linestring.pushLatLngAlt(parts[0], parts[1]);
              });

              // Retrieve the mapped positions of the requested waypoints:
              startPoint = route.waypoint[0].mappedPosition;
              endPoint = route.waypoint[1].mappedPosition;

              // Create a polyline to display the route:
              var routeLine = new H.map.Polyline(linestring, {
              style: { strokeColor: 'blue', lineWidth: 3 }
              });

              // Create a marker for the start point:
              var startMarker = new H.map.Marker({
              lat: startPoint.latitude,
              lng: startPoint.longitude
              });

              // Create a marker for the end point:
              var endMarker = new H.map.Marker({
              lat: endPoint.latitude,
              lng: endPoint.longitude
              });

              // Add the route polyline and the two markers to the map:
              map.addObjects([routeLine, startMarker, endMarker]);

              // Set the map's viewport to make the whole route visible:
              map.getViewModel().setLookAtData({bounds: routeLine.getBoundingBox()});
              }
            };

        
            // Get an instance of the routing service:
            var router = platform.getRoutingService();

            // Call calculateRoute() with the routing parameters,
            // the callback and an error callback function (called if a
            // communication error occurs):
            router.calculateRoute(routingParameters, onResult,
                function (error) {
                    alert(error.message);
                });
        
    </script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
</body>
</html>